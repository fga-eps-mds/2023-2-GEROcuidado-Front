// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layouts renders PrivateLayout correctly 1`] = `
<View
  style={
    {
      "zIndex": 9999,
    }
  }
>
  <View
    collapsable={false}
    onLayout={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    pointerEvents="box-none"
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": [
          {
            "translateY": 0,
          },
        ],
      }
    }
    testID="toastAnimatedContainer"
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFF",
          "borderLeftColor": "#69C779",
          "borderLeftWidth": 5,
          "borderRadius": 6,
          "elevation": 2,
          "flexDirection": "row",
          "height": 60,
          "opacity": 1,
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 6,
          "width": 340,
        }
      }
      testID="toastTouchableContainer"
    >
      <View
        style={
          [
            {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
              "paddingHorizontal": 25,
            },
            undefined,
          ]
        }
        testID="toastContentContainer"
      />
    </View>
  </View>
</View>
`;

exports[`Layouts renders PublicLayout correctly 1`] = `
<View
  style={
    {
      "zIndex": 9999,
    }
  }
>
  <View
    collapsable={false}
    onLayout={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    pointerEvents="box-none"
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": [
          {
            "translateY": 0,
          },
        ],
      }
    }
    testID="toastAnimatedContainer"
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFF",
          "borderLeftColor": "#69C779",
          "borderLeftWidth": 5,
          "borderRadius": 6,
          "elevation": 2,
          "flexDirection": "row",
          "height": 60,
          "opacity": 1,
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 6,
          "width": 340,
        }
      }
      testID="toastTouchableContainer"
    >
      <View
        style={
          [
            {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
              "paddingHorizontal": 25,
            },
            undefined,
          ]
        }
        testID="toastContentContainer"
      />
    </View>
  </View>
</View>
`;
